openapi: 3.1.0
info:
  version: v1
  title: api-posts
servers:
  - url: http://localhost:3002/api/v1
paths:
  /users/auth:
    post:
      summary: Authenticate user
      operationId: authenticate
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./schemas-v1.yml#/components/schemas/AuthRequest"
      responses:
        200:
          description: The authenticated user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
  /users:
    get:
      summary: Find all users
      operationId: findAllUsers
      tags:
        - user
      x-spring-paginated: true
      parameters:
        - name: ids
          in: query
          description: The IDs of entities to search
          schema:
            type: array
            items:
              type: integer
              format: int64
        - $ref: "./parameters-v1.yml#/components/parameters/searchIn"
        - $ref: "./parameters-v1.yml#/components/parameters/text"
      responses:
        200:
          description: A list of users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPageResponse"
    post:
      summary: Create user
      operationId: createUser
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./schemas-v1.yml#/components/schemas/CreateUserRequest"
      responses:
        200:
          description: The created user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
  /users/{id}:
    patch:
      summary: Update user
      operationId: updateUser
      tags:
        - user
      parameters:
        - $ref: "./parameters-v1.yml#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./schemas-v1.yml#/components/schemas/UpdateUserRequest"
      responses:
        200:
          description: The updated user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
    delete:
      summary: Remove user by ID
      operationId: removeUserById
      tags:
        - user
      parameters:
        - $ref: "./parameters-v1.yml#/components/parameters/id"
      responses:
        200:
          description: The ID of the removed user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdResponse"
  /users/{idOrSlug}:
    get:
      summary: Find user by ID or slug
      operationId: findUserByIdOrSlug
      tags:
        - user
      parameters:
        - $ref: "./parameters-v1.yml#/components/parameters/idOrSlug"
      responses:
        200:
          description: The user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
  /users/email/{email}:
    get:
      summary: Find user by email
      operationId: findUserByEmail
      tags:
        - user
      parameters:
        - $ref: "./parameters-v1.yml#/components/parameters/email"
      responses:
        200:
          description: The user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
components:
  # Schemas imported from api-commons
  schemas:
    UserPageResponse:
      type: object
    UserResponse:
      type: object
    UserDetails:
      type: object
    IdResponse:
      type: object
