version: "3.9"

services:
    api-gateway:
        restart: always
        ports:
            - ${API_GATEWAY_PORT_EXTERNAL}:${API_GATEWAY_PORT}
        depends_on:
            - api-aggregator
            - api-users
            - api-posts
        networks:
            - geek-regime-internal
            - geek-regime-external
        environment:
            - API_AGGREGATOR_HOST
            - API_AGGREGATOR_PORT
            - API_GATEWAY_HOST_EXTERNAL
            - API_GATEWAY_PORT
            - API_GATEWAY_PORT_EXTERNAL
            - API_POSTS_HOST
            - API_POSTS_PORT
            - API_USERS_HOST
            - API_USERS_PORT
            - APP_NAME
            - CLIENT_WEB_HOST_EXTERNAL
            - CLIENT_WEB_PORT_EXTERNAL
            - JWT_EXPIRES_IN
            - JWT_SECRET
            - MAILER_API_KEY
            - MAILER_ENDPOINT
            - MAILER_SENDER_EMAIL
            - NODE_ENV
            - YANDEX_CLIENT_ID
            - YANDEX_CLIENT_SECRET

    api-aggregator:
        build:
            context: ../
            dockerfile: $PWD/builder/jvm/Dockerfile
            args:
                API_COMMONS_VERSION: ${API_COMMONS_VERSION} # [1]
                DOCKER_NAMESPACE: ${DOCKER_NAMESPACE}
                REPOSITORY: api-aggregator
        restart: always
        ports:
            - ${API_AGGREGATOR_PORT_EXTERNAL}:${API_AGGREGATOR_PORT}
        depends_on:
            - api-users
            - api-posts
        networks:
            - geek-regime-internal
        environment:
            - API_POSTS_HOST
            - API_POSTS_PORT
            - API_USERS_HOST
            - API_USERS_PORT

    api-users:
        build:
            context: ../
            dockerfile: $PWD/builder/jvm/Dockerfile
            args:
                API_COMMONS_VERSION: ${API_COMMONS_VERSION} # [1]
                DOCKER_NAMESPACE: ${DOCKER_NAMESPACE}
                REPOSITORY: api-users
        restart: always
        ports:
            - ${API_USERS_PORT_EXTERNAL}:${API_USERS_PORT}
        depends_on:
            - db-users
        networks:
            - geek-regime-internal
        environment:
            - API_USERS_PORT
            - API_USERS_SEARCH_DATA_PATH
            - AWS_KEY_ID
            - AWS_KEY_SECRET
            - AWS_S3_TENANT_ID
            - AWS_S3_ENDPOINT
            - AWS_S3_REGION
            - DB_USERS_HOST
            - DB_USERS_NAME
            - DB_USERS_PASSWORD
            - DB_USERS_PORT
            - DB_USERS_USER

    api-posts:
        build:
            context: ../
            dockerfile: $PWD/builder/jvm/Dockerfile
            args:
                API_COMMONS_VERSION: ${API_COMMONS_VERSION} # [1]
                DOCKER_NAMESPACE: ${DOCKER_NAMESPACE}
                REPOSITORY: api-posts
        restart: always
        ports:
            - ${API_POSTS_PORT_EXTERNAL}:${API_POSTS_PORT}
        depends_on:
            - db-posts
            - api-users
        networks:
            - geek-regime-internal
        environment:
            - API_POSTS_HOST
            - API_POSTS_PORT
            - DB_POSTS_HOST
            - DB_POSTS_NAME
            - DB_POSTS_PASSWORD
            - DB_POSTS_PORT
            - DB_POSTS_USER

    db-users:
        image: postgres:14.3-alpine
        restart: always
        ports:
            - ${DB_USERS_PORT_EXTERNAL}:${DB_USERS_PORT}
        networks:
            - geek-regime-internal
        environment:
            - PGDATA=${DB_USERS_DATA_PATH}
            - POSTGRES_DB=${DB_USERS_NAME}
            - POSTGRES_PASSWORD=${DB_USERS_PASSWORD}
            - POSTGRES_USER=${DB_USERS_USER}

    db-posts:
        image: postgres:14.3-alpine
        restart: always
        ports:
            - ${DB_POSTS_PORT_EXTERNAL}:${DB_POSTS_PORT}
        networks:
            - geek-regime-internal
        environment:
            - PGDATA=${DB_POSTS_DATA_PATH}
            - POSTGRES_DB=${DB_POSTS_NAME}
            - POSTGRES_PASSWORD=${DB_POSTS_PASSWORD}
            - POSTGRES_USER=${DB_POSTS_USER}

    client-web:
        restart: always
        ports:
            - ${CLIENT_WEB_PORT_EXTERNAL}:${CLIENT_WEB_PORT}
        depends_on:
            - api-gateway
        networks:
            - geek-regime-external

networks:
    geek-regime-internal:
    geek-regime-external:
        driver: bridge

