version: "3.9"

services:
    api-gateway:
        container_name: geek-regime-api-gateway_prod
        build:
            context: ../api-gateway
            dockerfile: $PWD/builder/api-gateway/Dockerfile.production
        command: npm run start:prod
        volumes:
            - ../client-web/dist:/public

    api-aggregator:
        container_name: geek-regime-api-aggregator_prod
        command: mvn spring-boot:run -D spring-boot.run.profiles=prod

    api-users:
        container_name: geek-regime-api-users_prod
        command: mvn spring-boot:run -D spring-boot.run.profiles=prod,seed-fake-data # [1]
        volumes:
            - api-users-search-data_prod:${API_USERS_SEARCH_DATA_PATH}

    api-posts:
        container_name: geek-regime-api-posts_prod
        command: mvn spring-boot:run -D spring-boot.run.profiles=prod,seed-fake-data # [1]

    client-web:
        container_name: geek-regime-client-web_prod
        build:
            context: ../client-web
            dockerfile: $PWD/builder/client-web/Dockerfile.production
            args: # [2]
                - API_GATEWAY_HOST
                - API_GATEWAY_PORT
                - APP_NAME
                - CLIENT_WEB_HOST
                - CLIENT_WEB_PORT
                - CLIENT_WEB_WEBSOCKET_URL
                - NODE_ENV
        command: nginx -g "daemon off;"
        tty: true

volumes:
    api-users-search-data_prod:
        driver: local

# [1]. Seeding DBs with fake data for demo purposes.

# [2]. While dev gets environment variables from .env file, the prod build relies on GitHub
# secrets. It seems that passing those secrets to Dockerfile is the only way to ensure that
# build gets variables.
