openapi: 3.1.0
info:
  version: v1
  title: api-posts
servers:
  - url: http://localhost:3003/api/v1
paths:
  /users/{id}/posts:
    get:
      summary: Find all posts by author
      operationId: findAllPostsByAuthor
      tags:
        - post
      x-spring-paginated: true
      parameters:
        - $ref: "./parameters-v1.yml#/components/parameters/id"
        - $ref: "./parameters-v1.yml#/components/parameters/searchIn"
        - $ref: "./parameters-v1.yml#/components/parameters/text"
        - $ref: "./parameters-v1.yml#/components/parameters/period"
      responses:
        200:
          description: A list of posts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePostPreviewPageResponse"
  /spaces/{id}/posts:
    get:
      summary: Find all posts by space
      operationId: findAllPostsBySpace
      tags:
        - post
      x-spring-paginated: true
      parameters:
        - $ref: "./parameters-v1.yml#/components/parameters/id"
        - $ref: "./parameters-v1.yml#/components/parameters/searchIn"
        - $ref: "./parameters-v1.yml#/components/parameters/text"
        - $ref: "./parameters-v1.yml#/components/parameters/period"
      responses:
        200:
          description: A list of posts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePostPreviewPageResponse"
  /users/{userId}/posts/{postId}/vote:
    put:
      summary: Vote for the post on behalf of the user
      operationId: voteOnPost
      tags:
        - post
      parameters:
        - name: userId
          description: The ID of the user
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: postId
          description: The ID of the post
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VoteOnPostRequest"
      responses:
        200:
          description: The updated post
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePostDetailsResponse"
  /posts:
    get:
      summary: Find all posts
      operationId: findAllPosts
      tags:
        - post
      x-spring-paginated: true
      parameters:
        - $ref: "./parameters-v1.yml#/components/parameters/searchIn"
        - $ref: "./parameters-v1.yml#/components/parameters/text"
        - $ref: "./parameters-v1.yml#/components/parameters/period"
      responses:
        200:
          description: A list of posts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePostPreviewPageResponse"
    post:
      summary: Create post
      operationId: createPost
      tags:
        - post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePostRequest"
      responses:
        200:
          description: The created post
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePostDetailsResponse"
  /posts/{slug}:
    get:
      summary: Find post by slug
      operationId: findPostBySlug
      tags:
        - post
      parameters:
        - $ref: "./parameters-v1.yml#/components/parameters/slug"
      responses:
        200:
          description: The post
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePostDetailsResponse"
  /posts/{id}:
    patch:
      summary: Update post by ID
      operationId: updatePost
      tags:
        - post
      parameters:
        - $ref: "./parameters-v1.yml#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePostRequest"
      responses:
        200:
          description: The updated post
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePostDetailsResponse"
    delete:
      summary: Remove post by ID
      operationId: removePostById
      tags:
        - post
      parameters:
        - $ref: "./parameters-v1.yml#/components/parameters/id"
      responses:
        200:
          description: The ID of the removed post
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdResponse"
components:
  # Schemas imported from api-commons
  schemas:
    BasePostPreviewPageResponse:
      type: BasePostPreviewPageResponse
    BasePostDetailsResponse:
      type: BasePostDetailsResponse
    BasePostPreviewResponse:
      type: BasePostPreviewResponse
    CreatePostRequest:
      type: CreatePostRequest
    UpdatePostRequest:
      type: UpdatePostRequest
    VoteOnPostRequest:
      type: VoteOnPostRequest
    SaveSpaceRequest:
      type: SaveSpaceRequest
    IdResponse:
      type: IdResponse
